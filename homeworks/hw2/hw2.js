// Присваивание. Задачи
// 1. Записать в коротком виде
// a = a + 10
// Ответ: a += 10;

// b = b * 18
// Ответ: b *= 18;

// c = c - 10
// Ответ: c -= 10;

// x = a + x
// Ответ: x += a;

// y = y * z
// Ответ: y *= z

// i = i * 5 * y
// Ответ: i *= 5 * y;

// 2. Как возвести переменную в квадрат? Использовать короткую запись
let b = 8;
b *= b;
console.log(b);

// Условные операторы. Задачи

// Если переменная равна 'hidden', присвоить ей значение 'visible', иначе - 'hidden'.

let z = 'hidden';

if (z === 'hidden') {
    z = 'visible';
} else {
    z = 'hidden';
}

// записать то же самое условие тернарным оператором

z === 'hidden' ? z = 'visible' : z = 'hidden';

// Используя if, записать условие:
// 1. если переменная равна нулю, присвоить ей 1
// 2. если меньше нуля - строку 'less than zero'
// 3. если больше нуля - используя оператор "присвоение", переменную умножить на 10 (использовать короткую запись)

let x = 8;

if (x === 0) {
    x = 1;
} else if (x < 0) {
    x = 'less than zero';
} else if (x > 0) {
    x *= 10;
}

// Решить эту же задачу тернарным оператором.

x < 0 ? x = 'less than zero'
    : x > 0 ? x *= 10
    : x = 1;

// Конструкция switch... case. Задача
// if (a == 'block') {console.log('block')} else
// if (a == 'none') {console.log('none')} else
// if (a == 'inline) {console.log('inline)} else {console.log('other)}

// Записать условие, используя конструктор switch. В консоли должно отразиться только одно значение.

let a = 'inline';

switch (a) {
    case 'block':
        console.log('block');
        break;
    case 'none':
        console.log('none');
        break;
    case 'inline':
        console.log('inline');
        break;
    default:
        console.log('other');
}

console.log(z, x);

// Преобразование типов. Задачи
// Чему равно а, почему?

//let a = 0 || 'string';
// Ответ: string, || останавливается на первом true

// let a = 1 && 'string';
// Ответ: string, && останавливается на первом false или на последнем элементе

// let a = null || 25;
// Ответ: 25, null преобразуется в false, || останавливается на первом true

// let a = null && 25;
// Ответ: null, && останавливается на первом false

// let a = null || 0 || 35;
// Ответ: 35, || останавливается на первом true

// let a = null && 0 && 35;
// Ответ: null, && останавливается на первом false

// Что отобразится в консоли? Почему?

// 12 + 14 + '12'
// Ответ: '2612', сначала произойдет сложение чисел, затем сложение результрата со строкой, что приведет к преобразованию в строку

// 3 + 2 - '1'
// Ответ: 4, в математических выражениях происходит численное преобразование

// '3' + 2 - 1
// Ответ: 31, при сложении со строкой в первом действии получается строка '32' - 1, вторым действием минус приводит к численному преобразованию и пытается успешно извлечь из строки число, происходит вычисление

// true + 2
// Ответ: 3, математическое выражение приводит к численному преобразованию, true преобразуется в единицу

// +'10' + 1
// Ответ: 11, унарный плюс приводит строку к числу, дальше простое вычисление

// undefined + 2
// Ответ: NaN, undefined при числовом преобразовании преобразуется в NaN

// null + 5
// Ответ: 5, null при числовом преобразовании преобразуется в 0

// true + undefined
// Ответ: NaN, при числовом преобразовании true преобразуется в 1, но undefined преобразуется в NaN